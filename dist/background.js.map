{"version":3,"file":"background.js","sources":["webpack://weather-extension/./src/utils/api.ts","webpack://weather-extension/./src/utils/storage.ts","webpack://weather-extension/webpack/bootstrap","webpack://weather-extension/webpack/runtime/define property getters","webpack://weather-extension/webpack/runtime/hasOwnProperty shorthand","webpack://weather-extension/webpack/runtime/make namespace object","webpack://weather-extension/./src/background/background.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst OPEN_WEATHER_API_KEY = '638f948d0e20af77b71b9a15cf5795ec';\nexport function fetchOpenWeatherData(city, tempScale) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${tempScale}&appid=${OPEN_WEATHER_API_KEY}`);\n        if (!response.ok) {\n            throw new Error('city not found');\n        }\n        const data = yield response.json();\n        return data;\n    });\n}\nexport function getWeatherIconSrc(iconcode) {\n    return `https://openweathermap.org/img/wn/${iconcode}@2x.png`;\n}\n","export function setStoredCities(cities) {\n    const values = {\n        cities,\n    };\n    return new Promise((resolve) => {\n        chrome.storage.local.set(values, () => {\n            resolve();\n        });\n    });\n}\nexport function getStoredCities() {\n    const keys = [\"cities\"];\n    return new Promise((resolve) => {\n        chrome.storage.local.get(keys, (result) => {\n            var _a;\n            resolve((_a = result.cities) !== null && _a !== void 0 ? _a : []);\n        });\n    });\n}\nexport function setStoredOptions(options) {\n    const values = {\n        options,\n    };\n    return new Promise((resolve) => {\n        chrome.storage.local.set(values, () => {\n            resolve();\n        });\n    });\n}\nexport function getStoredOptions() {\n    const keys = ['options'];\n    return new Promise((resolve) => {\n        chrome.storage.local.get(keys, (res) => {\n            resolve(res.options);\n        });\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getStoredCities, getStoredOptions, setStoredCities, setStoredOptions } from '../utils/storage';\nimport { fetchOpenWeatherData } from '../utils/api';\nchrome.runtime.onInstalled.addListener(() => {\n    setStoredCities([]);\n    setStoredOptions({\n        homeCity: '',\n        tempScale: 'metric',\n        hasAutoOverlay: false,\n    });\n    chrome.contextMenus.create({\n        contexts: ['selection'],\n        title: 'Add city to weather extension',\n        id: 'weatherExtension'\n    });\n    chrome.alarms.create({\n        periodInMinutes: 1 / 6,\n    });\n});\nchrome.contextMenus.onClicked.addListener((event) => {\n    getStoredCities().then((cities) => {\n        setStoredCities([...cities, event.selectionText]);\n    });\n});\nchrome.alarms.onAlarm.addListener(() => {\n    getStoredOptions().then((options) => {\n        if (options.homeCity === '') {\n            return;\n        }\n        fetchOpenWeatherData(options.homeCity, options.tempScale).then((data) => {\n            const temp = Math.round(data.main.temp);\n            const symbol = options.tempScale === 'metric' ? '\\u2103' : '\\u2109';\n            chrome.action.setBadgeText({\n                text: `${temp}${symbol}`,\n            });\n        });\n    });\n});\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}